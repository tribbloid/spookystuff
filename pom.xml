<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.tribbloids.spookystuff</groupId>
  <artifactId>spookystuff</artifactId>
  <version>${revision}</version>

  <packaging>pom</packaging>
  <name>spookystuff</name>
  <description>Scalable Query Engine for Data Acquisition based on Apache Spark</description>
  <url>http://tribbloid.github.io/spookystuff/</url>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Peng Cheng</name>
      <email>pc175@uow.edu.au</email>
      <organization>tribbloids.com</organization>
      <organizationUrl>http://tribbloid.github.io</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:tribbloid/spookystuff.git</connection>
    <developerConnection>scm:git:git@github.com:tribbloid/spookystuff.git</developerConnection>
    <url>git@github.com:tribbloid/spookystuff.git</url>
  </scm>

  <modules>
    <module>test-resources</module>
    <module>mldsl</module>
    <module>core</module>
    <module>web</module>
    <module>integration</module>
    <!--<module>pipeline</module>-->
    <module>example</module>
    <module>assembly</module>
  </modules>

  <properties>

    <revision.base>0.7.0</revision.base>
    <!--    https://maven.apache.org/maven-ci-friendly.html-->
    <revision>${revision.base}_${scala.binary.version}${version.suffix}-SNAPSHOT</revision>
    <version.suffix/>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>

    <scala.version>2.12.15</scala.version>
    <scala.binary.version>2.12</scala.binary.version>

    <spark.version>2.4.8</spark.version>
    <spark.binary.version>2.4</spark.binary.version>
    <spark.assembly.version>${spark.binary.version}</spark.assembly.version>
    <spark.classifier>spark${spark.binary.version}</spark.classifier>

    <selenium.version>4.0.0</selenium.version>
    <tika.version>1.22</tika.version>

    <protobuf.version>2.5.0</protobuf.version>

    <cxf.version>3.0.16</cxf.version>
    <jackson.version>2.9.10</jackson.version>

    <!--    <jmh.version>1.21</jmh.version>-->

    <!--<failsafe.version>2.18</failsafe.version>-->
  </properties>

  <profiles>
    <profile>
      <id>java8</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>

    <!--    <profile>-->
    <!--      <id>spark-2.2</id>-->
    <!--      <properties>-->
    <!--        <spark.version>2.2.3</spark.version>-->
    <!--        <spark.binary.version>2.2</spark.binary.version>-->
    <!--      </properties>-->
    <!--    </profile>-->

    <!--    <profile>-->
    <!--      <id>spark-2.3</id>-->
    <!--      <properties>-->
    <!--        <spark.version>2.3.3</spark.version>-->
    <!--        <spark.binary.version>2.3</spark.binary.version>-->
    <!--      </properties>-->
    <!--    </profile>-->

    <profile>
      <id>spark-2.4</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>

    <profile>
      <id>spark-2.4-cloudera2</id>

      <properties>
        <spark.version>2.4.0.cloudera2</spark.version>
        <version.suffix>.cloudera2</version.suffix>
      </properties>
    </profile>

    <profile>
      <id>scalafix</id>

      <build>
        <plugins>

          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <configuration>
              <compilerPlugins>
                <compilerPlugin>
                  <groupId>org.scalameta</groupId>
                  <artifactId>semanticdb-scalac_${scala.version}</artifactId>
                  <version>4.5.6</version>
                </compilerPlugin>
              </compilerPlugins>
            </configuration>
          </plugin>

          <plugin>
            <groupId>io.github.evis</groupId>
            <artifactId>scalafix-maven-plugin_${scala.binary.version}</artifactId>
            <version>0.1.6_0.10.0</version>
          </plugin>
        </plugins>
      </build>

    </profile>


    <profile>
      <id>scala-2.11</id>

      <properties>
        <scala.version>2.11.12</scala.version>
        <scala.binary.version>2.11</scala.binary.version>
      </properties>
    </profile>

    <profile>
      <id>scala-2.12</id>

      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>

    <profile>
      <id>benchmark</id>
      <modules>
        <module>benchmark</module>
      </modules>
    </profile>

    <profile>
      <id>release-sign-artifacts</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>uav</id>
      <modules>
        <module>uav</module>
      </modules>
    </profile>
  </profiles>


  <repositories>
    <repository>
      <id>apache-repo</id>
      <name>Apache Repository</name>
      <url>https://repository.apache.org/content/repositories/releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <!--    following 2 are 404-->
    <!--    <repository>-->
    <!--      <id>typesafe</id>-->
    <!--      <name>typesafe - releases</name>-->
    <!--      <url>http://repo.typesafe.com/typesafe/releases/</url>-->
    <!--      <snapshots>-->
    <!--        <enabled>false</enabled>-->
    <!--      </snapshots>-->
    <!--    </repository>-->
    <!--    <repository>-->
    <!--      <id>typesafe-ivy</id>-->
    <!--      <name>Typesafe - ivy - releases</name>-->
    <!--      <url>http://repo.typesafe.com/typesafe/maven-ivy-releases/</url>-->
    <!--      <snapshots>-->
    <!--        <enabled>false</enabled>-->
    <!--      </snapshots>-->
    <!--    </repository>-->
    <repository>
      <id>oss.sonatype.org</id>
      <name>sonatype snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </repository>

    <!--<repository>-->
    <!--<id>clojars.org</id>-->
    <!--<url>http://clojars.org/repo</url>-->
    <!--</repository>-->
    <!--<repository>-->
    <!--<id>DataNucleus_Repos2</id>-->
    <!--<name>DataNucleus Repository</name>-->
    <!--<url>http://www.datanucleus.org/downloads/maven2</url>-->
    <!--</repository>-->

    <repository>
      <id>cloudera</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>
  </repositories>

  <pluginRepositories>

    <pluginRepository>
      <id>bintray-random-maven</id>
      <name>random-maven-plugins</name>
      <url>https://dl.bintray.com/random-maven/maven/</url>
    </pluginRepository>

  </pluginRepositories>

  <dependencyManagement>
    <dependencies>

      <!--DON'T DELETE! guava has too many versions and a ground truth has to be setup.-->
      <!--      TODO: add back! before this package wreck havoc of hadoop-->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>16.0.1</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.19</version>
      </dependency>

      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.binary.version}</artifactId>
        <version>3.2.12</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.2</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-rs-client</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        <version>${cxf.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}.5</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-scala_${scala.binary.version}</artifactId>
        <version>${jackson.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-reflect</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--    <dependency>-->
    <!--      <groupId>junit</groupId>-->
    <!--      <artifactId>junit</artifactId>-->
    <!--      <version>4.12</version>-->
    <!--      <scope>test</scope>-->
    <!--    </dependency>-->

    <!-- https://mvnrepository.com/artifact/com.holdenkarau/spark-testing-base -->
    <!--<dependency>-->
    <!--<groupId>com.holdenkarau</groupId>-->
    <!--<artifactId>spark-testing-base_${scala.binary.version}</artifactId>-->
    <!--<version>${spark.version}_0.9.0</version>-->
    <!--<scope>test</scope>-->
    <!--</dependency>-->
    <!--for driver leakage detection-->
    <dependency>
      <groupId>org.jprocesses</groupId>
      <artifactId>jProcesses</artifactId>
      <version>1.6.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.binary.version}</artifactId>
      <scope>test</scope>
    </dependency>

<!--   2 required by scalatest html report-->
<!--    https://github.com/scalatest/scalatest-maven-plugin/issues/88-->
    <dependency>
      <groupId>org.pegdown</groupId>
      <artifactId>pegdown</artifactId>
      <version>1.6.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.vladsch.flexmark</groupId>
      <artifactId>flexmark-all</artifactId>
      <version>0.62.2</version>
<!--      latest version compatible to Java 8-->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalacheck</groupId>
      <artifactId>scalacheck_${scala.binary.version}</artifactId>
      <version>1.14.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <!--for unit test only-->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-yarn_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>test</scope>
    </dependency>

    <!--    for performance comparison only-->
    <!-- https://mvnrepository.com/artifact/com.lihaoyi/fastparse -->
    <dependency>
      <groupId>com.lihaoyi</groupId>
      <artifactId>fastparse_${scala.binary.version}</artifactId>
      <version>2.1.0</version>
      <scope>test</scope>
    </dependency>


  </dependencies>

  <build>
    <!--<outputDirectory>target/classes</outputDirectory>-->
    <!--<testOutputDirectory>target/test-classes</testOutputDirectory>-->

    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.5.0.Final</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.5.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
          <executions>
            <execution>
              <id>dist</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/${assembly.jar.dir}</outputDirectory>
                <descriptors>
                  <descriptor>src/main/assembly/assembly.xml</descriptor>
                </descriptors>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.6</version>
        </plugin>


        <!-- Generate test jar too -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <attach>true</attach>
          </configuration>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
                <goal>test-jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.1</version>
          <configuration>
            <attach>true</attach>
            <validateLinks>false</validateLinks>
          </configuration>
          <!--          <executions>-->
          <!--            <execution>-->
          <!--              <id>attach-javadoc</id>-->
          <!--              <goals>-->
          <!--                <goal>jar</goal>-->
          <!--              </goals>-->
          <!--            </execution>-->
          <!--          </executions>-->
        </plugin>

        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>0.5.1</version>
          <extensions>true</extensions>
          <executions>
            <execution>
              <id>java-codegen</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>compile</goal>
                <goal>test-compile</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/generated-sources/java</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>python-codegen</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>compile-python</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/generated-sources/python</outputDirectory>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
          </configuration>
        </plugin>

        <!--<plugin>-->
        <!--<groupId>com.github.igor-petruk.protobuf</groupId>-->
        <!--<artifactId>protobuf-maven-plugin</artifactId>-->
        <!--<version>0.6.3</version>-->
        <!--<executions>-->
        <!--<execution>-->
        <!--<phase>generate-sources</phase>-->
        <!--<goals>-->
        <!--<goal>run</goal>-->
        <!--</goals>-->
        <!--</execution>-->
        <!--</executions>-->
        <!--</plugin>-->

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.2.5</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <executions>

          <!-- ensure proper cleanup -->
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>

          <!-- enable flattening -->
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>

          <!--          see https://github.com/mojohaus/flatten-maven-plugin/issues/100-->
          <!--          and https://stackoverflow.com/questions/52552329/use-maven-flatten-plugin-and-maven-shade-plugin-at-the-same-time-->
          <!--          <execution>-->
          <!--            <id>flatten.shaded</id>-->
          <!--            <phase>package</phase>-->
          <!--            <goals>-->
          <!--              <goal>flatten</goal>-->
          <!--            </goals>-->
          <!--          </execution>-->
        </executions>
      </plugin>

      <!--TODO: switch to it after https://github.com/mojohaus/flatten-maven-plugin/issues/61!-->
      <!--<plugin>-->
      <!--<groupId>com.carrotgarden.maven</groupId>-->
      <!--<artifactId>flatten-maven-plugin</artifactId>-->
      <!--<version>1.3.20180205153346</version>-->
      <!--<executions>-->
      <!--&lt;!&ndash; enable flattening &ndash;&gt;-->
      <!--<execution>-->
      <!--<id>flatten</id>-->
      <!--<goals>-->
      <!--<goal>flatten</goal>-->
      <!--</goals>-->
      <!--</execution>-->
      <!--</executions>-->

      <!--<configuration>-->
      <!--&lt;!&ndash;<performOverrideIdentity>true</performOverrideIdentity>&ndash;&gt;-->
      <!--&lt;!&ndash;<overrideArtifactId>${project.artifactId}_${scala.binary.version}</overrideArtifactId>&ndash;&gt;-->
      <!--&lt;!&ndash;TODO: upgrade to support these&ndash;&gt;-->
      <!--</configuration>-->
      <!--</plugin>-->

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.12</version>
        <executions>

          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/python</source>

                <source>${project.basedir}/shims/${spark.classifier}-shim/main/scala</source>
              </sources>
            </configuration>
          </execution>

          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/test/python</source>

                <source>${project.basedir}/shims/${spark.classifier}-shim/test/scala</source>
              </sources>
            </configuration>
          </execution>


          <!--add python into fat jar that are shipped to all workers-->
          <!--original:-->
          <!--<resources>-->
          <!--<resource>-->
          <!--<directory>src/main/resources</directory>-->
          <!--</resource>-->

          <!--<resource>-->
          <!--<directory>src/main/python</directory>-->
          <!--<targetPath>python</targetPath>-->
          <!--</resource>-->
          <!--<resource>-->
          <!--<directory>target/generated-sources/python</directory>-->
          <!--<targetPath>python</targetPath>-->
          <!--</resource>-->
          <!--</resources>-->

          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main/python</directory>
                  <targetPath>python</targetPath>
                </resource>

                <resource>
                  <directory>target/generated-sources/python</directory>
                  <targetPath>python</targetPath>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.4.1</version>
        <executions>

          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile-first</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
          <!--required for publishing to maven central-->
          <execution>
            <id>add-source</id>
            <goals>
              <goal>add-source</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-scaladocs</id>
            <goals>
              <goal>doc-jar</goal>
            </goals>
            <configuration>
              <args>
                <!--                see https://github.com/dmlc/xgboost/issues/4000-->
                <arg>-nobootcp</arg>
              </args>
            </configuration>
          </execution>
        </executions>
        <configuration>

<!--          <compilerPlugins>-->
<!--            <compilerPlugin>-->
<!--              <groupId>org.scalameta</groupId>-->
<!--              <artifactId>semanticdb-scalac_${scala.version}</artifactId>-->
<!--              <version>4.5.6</version>-->
<!--            </compilerPlugin>-->
<!--          </compilerPlugins>-->

          <scalaVersion>${scala.version}</scalaVersion>
          <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
          <recompileMode>incremental</recompileMode>
          <!--https://tpolecat.github.io/2017/04/25/scalac-flags.html-->
          <args>
            <arg>-target:jvm-${java.version}</arg>
            <arg>-unchecked</arg>
            <arg>-deprecation</arg>
            <arg>-feature</arg>
            <arg>-g:vars</arg>

            <arg>-encoding</arg>
            <arg>UTF-8</arg>

            <arg>-Xlint</arg>
            <arg>-Ywarn-unused</arg>
            <!--<arg>-Yno-adapted-args</arg>-->
            <!--<arg>-Ywarn-dead-code</arg> &lt;!&ndash;,        // N.B. doesn't work well with the ??? hole &ndash;&gt;-->
            <!--<arg>-Ywarn-numeric-widen</arg>-->
            <!--<arg>-Ywarn-value-discard</arg>-->
            <!--<arg>-Xfuture</arg>-->
            <!--<arg>-Ypartial-unification</arg>-->
            <!--<arg>-Ywarn-numeric-widen</arg>        &lt;!&ndash;      // Warn when numerics are widened. &ndash;&gt;-->

            <arg>-language:higherKinds</arg>
          </args>
          <javacArgs>
            <javacArg>-source</javacArg>
            <javacArg>${java.version}</javacArg>
            <javacArg>-target</javacArg>
            <javacArg>${java.version}</javacArg>
          </javacArgs>
          <excludes>
            <exclude>**/.ipynb_checkpoints/*</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/test-results/scalatest</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>scalatest-report.txt</filereports>
          <htmlreporters>${project.build.directory}/site/scalatest</htmlreporters>

          <tagsToExclude>
            com.tribbloids.spookystuff.testutils.Unstable,
            com.tribbloids.spookystuff.testutils.LocalOnly
          </tagsToExclude>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>

          <excludes>
            <exclude>**/.ipynb_checkpoints/*</exclude>
          </excludes>
          <compilerArgs>-Xlint</compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.6</version>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <!--<autoReleaseAfterClose>true</autoReleaseAfterClose>-->
        </configuration>
      </plugin>

      <!--<plugin>-->
      <!--<groupId>com.github.klieber</groupId>-->
      <!--<artifactId>phantomjs-maven-plugin</artifactId>-->
      <!--<version>0.4</version>-->
      <!--<executions>-->
      <!--<execution>-->
      <!--<goals>-->
      <!--<goal>install</goal>-->
      <!--</goals>-->
      <!--</execution>-->
      <!--</executions>-->
      <!--<configuration>-->
      <!--<version>1.9.8</version>-->
      <!--</configuration>-->
      <!--</plugin>-->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M2</version>
        <executions>
          <execution>
            <id>enforce-profiles</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireActiveProfile>
                  <profiles>spark-2.2,spark-2.3,spark-2.4,spark-2.4-cloudera2</profiles>
                  <all>false</all>
                </requireActiveProfile>

                <requireActiveProfile>
                  <profiles>scala-2.11,scala-2.12</profiles>
                  <all>false</all>
                </requireActiveProfile>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>

        <!--very important! child pom doesn't inherit profile!-->
        <inherited>false</inherited>
      </plugin>
    </plugins>

  </build>

  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

</project>
