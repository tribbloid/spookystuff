<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>spookystuff</artifactId>
    <groupId>com.tribbloids.spookystuff</groupId>
    <version>${revision}</version>
  </parent>

  <artifactId>spookystuff-parent</artifactId>

  <packaging>pom</packaging>

  <modules>
    <module>test-resources</module>
    <module>mldsl</module>
    <module>core</module>
    <module>web</module>
    <module>integration</module>
    <!--<module>pipeline</module>-->
    <module>assembly</module>
  </modules>

  <profiles>

    <profile>
      <id>benchmark</id>
      <modules>
        <module>benchmark</module>
      </modules>
    </profile>

    <profile>
      <id>uav</id>
      <modules>
        <module>uav</module>
      </modules>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>

      <!--DON'T DELETE! guava has too many versions and a ground truth has to be setup.-->
      <!--      TODO: add back! before this package wreck havoc of hadoop-->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>16.0.1</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.19</version>
      </dependency>

      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.binary.version}</artifactId>
        <version>3.2.12</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.2</version>
      </dependency>

      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-rs-client</artifactId>
        <version>${cxf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        <version>${cxf.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}.5</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-scala_${scala.binary.version}</artifactId>
        <version>${jackson.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-reflect</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--    <dependency>-->
    <!--      <groupId>junit</groupId>-->
    <!--      <artifactId>junit</artifactId>-->
    <!--      <version>4.12</version>-->
    <!--      <scope>test</scope>-->
    <!--    </dependency>-->

    <!-- https://mvnrepository.com/artifact/com.holdenkarau/spark-testing-base -->
    <!--<dependency>-->
    <!--<groupId>com.holdenkarau</groupId>-->
    <!--<artifactId>spark-testing-base_${scala.binary.version}</artifactId>-->
    <!--<version>${spark.version}_0.9.0</version>-->
    <!--<scope>test</scope>-->
    <!--</dependency>-->
    <!--for driver leakage detection-->
    <dependency>
      <groupId>org.jprocesses</groupId>
      <artifactId>jProcesses</artifactId>
      <version>1.6.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.binary.version}</artifactId>
      <scope>test</scope>
    </dependency>

<!--   2 required by scalatest html report-->
<!--    https://github.com/scalatest/scalatest-maven-plugin/issues/88-->
    <dependency>
      <groupId>org.pegdown</groupId>
      <artifactId>pegdown</artifactId>
      <version>1.6.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.vladsch.flexmark</groupId>
      <artifactId>flexmark-all</artifactId>
      <version>0.62.2</version>
<!--      latest version compatible to Java 8-->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalacheck</groupId>
      <artifactId>scalacheck_${scala.binary.version}</artifactId>
      <version>1.14.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <!--for unit test only-->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-yarn_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>test</scope>
    </dependency>

    <!--    for performance comparison only-->
    <!-- https://mvnrepository.com/artifact/com.lihaoyi/fastparse -->
    <dependency>
      <groupId>com.lihaoyi</groupId>
      <artifactId>fastparse_${scala.binary.version}</artifactId>
      <version>2.1.0</version>
      <scope>test</scope>
    </dependency>


  </dependencies>

  <build>
    <!--<outputDirectory>target/classes</outputDirectory>-->
    <!--<testOutputDirectory>target/test-classes</testOutputDirectory>-->

    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.5.0.Final</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>0.5.1</version>
          <extensions>true</extensions>
          <executions>
            <execution>
              <id>java-codegen</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>compile</goal>
                <goal>test-compile</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/generated-sources/java</outputDirectory>
              </configuration>
            </execution>
            <execution>
              <id>python-codegen</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>compile-python</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/generated-sources/python</outputDirectory>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
          </configuration>
        </plugin>

        <!--<plugin>-->
        <!--<groupId>com.github.igor-petruk.protobuf</groupId>-->
        <!--<artifactId>protobuf-maven-plugin</artifactId>-->
        <!--<version>0.6.3</version>-->
        <!--<executions>-->
        <!--<execution>-->
        <!--<phase>generate-sources</phase>-->
        <!--<goals>-->
        <!--<goal>run</goal>-->
        <!--</goals>-->
        <!--</execution>-->
        <!--</executions>-->
        <!--</plugin>-->

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.12</version>
        <executions>

          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/python</source>

                <source>${project.basedir}/shims/${spark.classifier}-shim/main/scala</source>
              </sources>
            </configuration>
          </execution>

          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/test/python</source>

                <source>${project.basedir}/shims/${spark.classifier}-shim/test/scala</source>
              </sources>
            </configuration>
          </execution>


          <!--add python into fat jar that are shipped to all workers-->
          <!--original:-->
          <!--<resources>-->
          <!--<resource>-->
          <!--<directory>src/main/resources</directory>-->
          <!--</resource>-->

          <!--<resource>-->
          <!--<directory>src/main/python</directory>-->
          <!--<targetPath>python</targetPath>-->
          <!--</resource>-->
          <!--<resource>-->
          <!--<directory>target/generated-sources/python</directory>-->
          <!--<targetPath>python</targetPath>-->
          <!--</resource>-->
          <!--</resources>-->

          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main/python</directory>
                  <targetPath>python</targetPath>
                </resource>

                <resource>
                  <directory>target/generated-sources/python</directory>
                  <targetPath>python</targetPath>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.4.1</version>
        <executions>

          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile-first</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
          <!--required for publishing to maven central-->
          <execution>
            <id>add-source</id>
            <goals>
              <goal>add-source</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-scaladocs</id>
            <goals>
              <goal>doc-jar</goal>
            </goals>
            <configuration>
              <args>
                <!--                see https://github.com/dmlc/xgboost/issues/4000-->
                <arg>-nobootcp</arg>
              </args>
            </configuration>
          </execution>
        </executions>
        <configuration>

<!--          <compilerPlugins>-->
<!--            <compilerPlugin>-->
<!--              <groupId>org.scalameta</groupId>-->
<!--              <artifactId>semanticdb-scalac_${scala.version}</artifactId>-->
<!--              <version>4.5.6</version>-->
<!--            </compilerPlugin>-->
<!--          </compilerPlugins>-->

          <scalaVersion>${scala.version}</scalaVersion>
          <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
          <recompileMode>incremental</recompileMode>
          <!--https://tpolecat.github.io/2017/04/25/scalac-flags.html-->
          <args>
            <arg>-target:jvm-${java.version}</arg>
            <arg>-unchecked</arg>
            <arg>-deprecation</arg>
            <arg>-feature</arg>
            <arg>-g:vars</arg>

            <arg>-encoding</arg>
            <arg>UTF-8</arg>

            <arg>-Xlint</arg>
            <arg>-Ywarn-unused</arg>
            <!--<arg>-Yno-adapted-args</arg>-->
            <!--<arg>-Ywarn-dead-code</arg> &lt;!&ndash;,        // N.B. doesn't work well with the ??? hole &ndash;&gt;-->
            <!--<arg>-Ywarn-numeric-widen</arg>-->
            <!--<arg>-Ywarn-value-discard</arg>-->
            <!--<arg>-Xfuture</arg>-->
            <!--<arg>-Ypartial-unification</arg>-->
            <!--<arg>-Ywarn-numeric-widen</arg>        &lt;!&ndash;      // Warn when numerics are widened. &ndash;&gt;-->

            <arg>-language:higherKinds</arg>
          </args>
          <javacArgs>
            <javacArg>-source</javacArg>
            <javacArg>${java.version}</javacArg>
            <javacArg>-target</javacArg>
            <javacArg>${java.version}</javacArg>
          </javacArgs>
          <excludes>
            <exclude>**/.ipynb_checkpoints/*</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <memoryFiles>${project.build.directory}/test-results/scalatest/scalatest-failed.txt</memoryFiles>

          <reportsDirectory>${project.build.directory}/test-results/scalatest</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>scalatest-report.txt</filereports>

          <htmlreporters>${project.build.directory}/site/scalatest</htmlreporters>

          <tagsToExclude>
            com.tribbloids.spookystuff.testutils.Unstable,
            com.tribbloids.spookystuff.testutils.LocalOnly
          </tagsToExclude>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>

          <excludes>
            <exclude>**/.ipynb_checkpoints/*</exclude>
          </excludes>
          <compilerArgs>-Xlint</compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.6</version>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <!--<autoReleaseAfterClose>true</autoReleaseAfterClose>-->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>enforce-profiles</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireActiveProfile>
                  <profiles>spark-2.2,spark-2.3,spark-2.4,spark-2.4-cloudera2</profiles>
                  <all>false</all>
                </requireActiveProfile>

                <requireActiveProfile>
                  <profiles>scala-2.11,scala-2.12</profiles>
                  <all>false</all>
                </requireActiveProfile>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>

        <!--very important! child pom doesn't inherit profile!-->
        <inherited>false</inherited>
      </plugin>
    </plugins>

  </build>

</project>
